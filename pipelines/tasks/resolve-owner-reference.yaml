apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: resolve-owner-reference
spec:
  params:
    - name: ownerReferences
    - name: namespace
  results:
    - name: patch
  steps:
    - name: resolve-owner-reference
      image: quay.io/thoth-station/s2i-thoth-dev:latest
      env:
        - name: OWNER_REFERENCES
          value: $(params.ownerReferences)
        - name: NAMESPACE
          value: $(params.namespace)
        - name: RESULT
          value: $(results.patch.path)
      script: |
        #!/opt/app-root/bin/python
        import json
        import os

        OWNER_REFERENCES = json.loads(os.getenv("OWNER_REFERENCES"))
        TARGET_REFERENCE = next(
            filter(lambda x: x["namespace"] == os.getenv("NAMESPACE"), OWNER_REFERENCES), {}
        )

        PATCH = {"metadata": {"ownerReferences": [TARGET_REFERENCE]}}
        with open(os.getenv("RESULT"), "w") as f:
            json.dump(PATCH, f)
